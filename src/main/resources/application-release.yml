spring:
  application:
    name: backend

  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: "${mysql_url}"
    username: "${mysql_username}"
    password: "${mysql_password}"

  jpa:
    database-platform: org.hibernate.dialect.MySQLDialect
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        format_sql: true

  jwt:
    secret: "${jwt_hashcode}"

  security:
    oauth2:
      client:
        registration:
          naver:
            client-name: naver
            client-id: "${oauth2_naver_id}"
            client-secret: "${oauth2_naver_secret}"
            redirect-uri: https://woozuda-release.shop/login/oauth2/code/naver
            authorization-grant-type: authorization_code
            scope: name, email
          google:
            client-name: google
            client-id: "${oauth2_google_id}"
            client-secret: "${oauth2_google_secret}"
            redirect-uri: https://woozuda-release.shop/login/oauth2/code/google
            authorization-grant-type: authorization_code
            scope: profile, email
          kakao:
            client-name: kakao
            client-id: "${oauth2_kakao_id}"
            client-secret: "${oauth2_kakao_secret}"
            redirect-uri: https://woozuda-release.shop/login/oauth2/code/kakao
            authorization-grant-type: authorization_code
            scope: profile_nickname, account_email
            client-authentication-method: client_secret_post
        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id

ncp:
  storage:
    region: kr-standard
    endpoint: https://kr.object.ncloudstorage.com
    accessKey: "${object_storage_access_key}"
    secretKey: "${object_storage_secret_key}"
    bucketName: "${object_storage_bucket_name}"
  clova-studio:
    question-creator:
      url: "${question_creator_url}"
      api-key: "${question_creator_api_key}"
      apigw-key: "${question_creator_apigw_key}"

openai:
  api:
    key: "${openai_api_key}"  # 환경 변수에서 OPENAI_API_KEY를 가져옵니다.
    url: "${openai.api.url}"
    chat:
      options:
        model: gpt-3.5-turbo  # 사용할 AI 모델 (예: gpt-3.5-turbo)
        temperature: 0.7  # 생성되는 텍스트의 다양성 정도를 조절하는 파라미터 (0.0 ~ 1.0)

management:
  server:
    port: "${actuator_port}"
  endpoints:
    web:
      exposure:
        include: prometheus
  endpoint:
    prometheus:
      enabled: true #default

logging:
  config: "classpath:./logback-release.xml"

allow-ips: "${allow_ips}"

aes:
  password: "${aes_password}"
